{
  "name": "test",
  "endpoints": [
    {
      "modelType": "CLASSIFICATION",
      "inputFolderRef": "EnYkaqTP",
      "envSelection": {
        "envMode": "INHERIT"
      },
      "code": "\nimport dataiku\nfrom dataiku.apinode.predict.predictor import ClassificationPredictor\nimport pandas as pd\n \nimport os\nimport pickle\nfrom sklearn.externals import joblib\n \nclass MyPredictor(ClassificationPredictor):\n    \"\"\"The class for a classification Custom API node predictor\"\"\"\n \n    def __init__(self, data_folder \u003d None):\n        \"\"\"data_folder is the absolute path to the managed folder storing the data for the model\n        (if any)\"\"\"\n        self.data_folder \u003d folders[0]\n \n    def predict(self, features_df):\n \n        #get the location of the managed folder\n       # handle \u003d dataiku.Folder(\"model_web\",project_key\u003d\"PremeraListens\")\n        path \u003d handle.get_path()\n        #load the pickled objects\n        vect \u003d joblib.load(os.path.join(path,\u0027model_web.p\u0027))\n        clf \u003d joblib.load(os.path.join(path,\u0027vect.p\u0027))\n        #score the data\n        X \u003d vect.transform(features_df[\u0027Comment\u0027])\n        predictions \u003d clf.predict(X)\n \n        return (predictions)",
      "testQueries": [
        {
          "q": {
            "features": {}
          }
        }
      ],
      "enrichMapping": [],
      "healthCheckQueries": [],
      "id": "test",
      "type": "CUSTOM_PREDICTION"
    }
  ],
  "publicAccess": true,
  "authRealm": {
    "queryKeys": []
  },
  "tags": [],
  "checklists": {
    "checklists": []
  }
}